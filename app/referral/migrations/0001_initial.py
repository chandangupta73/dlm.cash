# Generated by Django 4.2.7 on 2025-08-28 12:20

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('investment', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('level', models.PositiveIntegerField(help_text='Referral level (1 = direct, 2 = indirect, etc.)', validators=[django.core.validators.MinValueValidator(1)])),
                ('referred_user', models.ForeignKey(help_text='User who was referred', on_delete=django.db.models.deletion.CASCADE, related_name='referrals_received', to=settings.AUTH_USER_MODEL)),
                ('referrer', models.ForeignKey(blank=True, help_text='The user who referred the referrer (for tracking chain)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='downline_referrals', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(help_text='User who referred someone', on_delete=django.db.models.deletion.CASCADE, related_name='referrals_given', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Referral',
                'verbose_name_plural': 'Referrals',
                'db_table': 'referrals',
            },
        ),
        migrations.CreateModel(
            name='ReferralConfig',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('max_levels', models.PositiveIntegerField(default=3, help_text='Maximum referral levels supported', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('level_1_percentage', models.DecimalField(decimal_places=2, default=Decimal('5.00'), help_text='Referral bonus percentage for level 1', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('level_2_percentage', models.DecimalField(decimal_places=2, default=Decimal('3.00'), help_text='Referral bonus percentage for level 2', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('level_3_percentage', models.DecimalField(decimal_places=2, default=Decimal('1.00'), help_text='Referral bonus percentage for level 3', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Referral Configuration',
                'verbose_name_plural': 'Referral Configurations',
                'db_table': 'referral_config',
            },
        ),
        migrations.CreateModel(
            name='ReferralMilestone',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name of the milestone', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Description of the milestone', null=True)),
                ('condition_type', models.CharField(choices=[('total_referrals', 'Total Referrals'), ('total_earnings', 'Total Earnings')], help_text='Type of condition to trigger this milestone', max_length=20)),
                ('condition_value', models.DecimalField(decimal_places=6, help_text='Value that must be reached to trigger the milestone', max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('bonus_amount', models.DecimalField(decimal_places=6, help_text='Bonus amount to be credited when milestone is reached', max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('currency', models.CharField(choices=[('INR', 'Indian Rupee'), ('USDT', 'Tether')], help_text='Currency of the bonus amount', max_length=4)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this milestone is active')),
            ],
            options={
                'verbose_name': 'Referral Milestone',
                'verbose_name_plural': 'Referral Milestones',
                'db_table': 'referral_milestones',
                'ordering': ['condition_value'],
                'indexes': [models.Index(fields=['condition_type', 'is_active'], name='referral_mi_conditi_c8d57e_idx'), models.Index(fields=['currency', 'is_active'], name='referral_mi_currenc_d87069_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserReferralProfile',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('referral_code', models.CharField(help_text='Unique referral code for this user', max_length=20, unique=True)),
                ('total_referrals', models.PositiveIntegerField(default=0, help_text='Total number of users referred (all levels)')),
                ('total_earnings', models.DecimalField(decimal_places=6, default=Decimal('0.000000'), help_text='Total referral earnings across all levels', max_digits=20)),
                ('total_earnings_inr', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total referral earnings in INR', max_digits=20)),
                ('total_earnings_usdt', models.DecimalField(decimal_places=6, default=Decimal('0.000000'), help_text='Total referral earnings in USDT', max_digits=20)),
                ('last_earning_date', models.DateTimeField(blank=True, null=True)),
                ('referred_by', models.ForeignKey(blank=True, help_text='User who referred this user (direct referrer)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='direct_referrals', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='referral_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Referral Profile',
                'verbose_name_plural': 'User Referral Profiles',
                'db_table': 'user_referral_profiles',
                'indexes': [models.Index(fields=['referral_code'], name='user_referr_referra_af32f4_idx'), models.Index(fields=['referred_by'], name='user_referr_referre_c6d1dc_idx'), models.Index(fields=['total_referrals'], name='user_referr_total_r_c5de7a_idx')],
            },
        ),
        migrations.CreateModel(
            name='ReferralEarning',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('level', models.PositiveIntegerField(help_text='Referral level for this earning', validators=[django.core.validators.MinValueValidator(1)])),
                ('amount', models.DecimalField(decimal_places=6, help_text='Referral bonus amount', max_digits=20, validators=[django.core.validators.MinValueValidator(Decimal('0.000001'))])),
                ('currency', models.CharField(choices=[('INR', 'Indian Rupee'), ('USDT', 'Tether')], help_text='Currency of the referral bonus', max_length=4)),
                ('percentage_used', models.DecimalField(decimal_places=2, help_text='Percentage used to calculate this bonus', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01')), django.core.validators.MaxValueValidator(Decimal('100.00'))])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('credited', 'Credited'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('credited_at', models.DateTimeField(blank=True, null=True)),
                ('investment', models.ForeignKey(help_text='The investment that triggered this referral earning', on_delete=django.db.models.deletion.CASCADE, related_name='referral_earnings', to='investment.investment')),
                ('referral', models.ForeignKey(help_text='The referral relationship that generated this earning', on_delete=django.db.models.deletion.CASCADE, related_name='earnings', to='referral.referral')),
            ],
            options={
                'verbose_name': 'Referral Earning',
                'verbose_name_plural': 'Referral Earnings',
                'db_table': 'referral_earnings',
                'indexes': [models.Index(fields=['referral', 'status'], name='referral_ea_referra_909be4_idx'), models.Index(fields=['investment', 'status'], name='referral_ea_investm_b4cec1_idx'), models.Index(fields=['level', 'created_at'], name='referral_ea_level_b246f7_idx'), models.Index(fields=['currency', 'created_at'], name='referral_ea_currenc_5c5531_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='referral',
            index=models.Index(fields=['user', 'level'], name='referrals_user_id_46e2a5_idx'),
        ),
        migrations.AddIndex(
            model_name='referral',
            index=models.Index(fields=['referred_user'], name='referrals_referre_ebd676_idx'),
        ),
        migrations.AddIndex(
            model_name='referral',
            index=models.Index(fields=['level', 'created_at'], name='referrals_level_dacf4a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='referral',
            unique_together={('user', 'referred_user', 'level')},
        ),
    ]

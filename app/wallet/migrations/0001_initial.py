# Generated by Django 4.2.7 on 2025-08-28 12:19

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='USDTWallet',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('balance', models.DecimalField(decimal_places=6, default=0.0, max_digits=20, validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('locked', 'Locked')], default='active', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('wallet_address', models.CharField(blank=True, help_text="User's real blockchain wallet address", max_length=255, null=True)),
                ('private_key_encrypted', models.TextField(blank=True, help_text='Encrypted private key', null=True)),
                ('chain_type', models.CharField(choices=[('erc20', 'ERC20 (Ethereum)'), ('bep20', 'BEP20 (Binance Smart Chain)')], default='erc20', help_text='Chain type for this wallet', max_length=10)),
                ('is_real_wallet', models.BooleanField(default=False, help_text='Whether this is a real blockchain wallet or dummy')),
                ('last_sweep_at', models.DateTimeField(blank=True, help_text='Last time funds were swept to master wallet', null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='usdt_wallet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'USDT Wallet',
                'verbose_name_plural': 'USDT Wallets',
                'db_table': 'usdt_wallet',
            },
        ),
        migrations.CreateModel(
            name='INRWallet',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=15, validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('active', 'Active'), ('suspended', 'Suspended'), ('locked', 'Locked')], default='active', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='inr_wallet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'INR Wallet',
                'verbose_name_plural': 'INR Wallets',
                'db_table': 'inr_wallet',
            },
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('transfer', 'Transfer'), ('roi_credit', 'ROI Credit'), ('referral_bonus', 'Referral Bonus'), ('admin_adjustment', 'Admin Adjustment'), ('investment', 'Investment'), ('refund', 'Refund'), ('sweep', 'Sweep'), ('usdt_deposit', 'USDT Deposit')], max_length=20)),
                ('wallet_type', models.CharField(choices=[('inr', 'INR'), ('usdt', 'USDT')], max_length=10)),
                ('chain_type', models.CharField(blank=True, choices=[('erc20', 'ERC20 (Ethereum)'), ('bep20', 'BEP20 (Binance Smart Chain)')], max_length=10, null=True)),
                ('amount', models.DecimalField(decimal_places=6, max_digits=20)),
                ('balance_before', models.DecimalField(decimal_places=6, max_digits=20)),
                ('balance_after', models.DecimalField(decimal_places=6, max_digits=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('reference_id', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallet_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Wallet Transaction',
                'verbose_name_plural': 'Wallet Transactions',
                'db_table': 'wallet_transaction',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'transaction_type'], name='wallet_tran_user_id_842d51_idx'), models.Index(fields=['status', 'created_at'], name='wallet_tran_status_58a2dc_idx'), models.Index(fields=['wallet_type', 'created_at'], name='wallet_tran_wallet__426c5b_idx'), models.Index(fields=['chain_type', 'created_at'], name='wallet_tran_chain_t_079f6a_idx')],
            },
        ),
        migrations.CreateModel(
            name='WalletAddress',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chain_type', models.CharField(choices=[('erc20', 'ERC20 (Ethereum)'), ('bep20', 'BEP20 (Binance Smart Chain)')], default='trc20', max_length=10)),
                ('address', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('suspended', 'Suspended')], default='active', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallet_addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Wallet Address',
                'verbose_name_plural': 'Wallet Addresses',
                'db_table': 'wallet_address',
                'indexes': [models.Index(fields=['user', 'chain_type'], name='wallet_addr_user_id_b29578_idx'), models.Index(fields=['address', 'chain_type'], name='wallet_addr_address_b35399_idx')],
                'unique_together': {('user', 'chain_type')},
            },
        ),
        migrations.CreateModel(
            name='USDTDepositRequest',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chain_type', models.CharField(choices=[('erc20', 'ERC20 (Ethereum)'), ('bep20', 'BEP20 (Binance Smart Chain)')], default='trc20', max_length=10)),
                ('amount', models.DecimalField(decimal_places=6, max_digits=20, validators=[django.core.validators.MinValueValidator(1e-06)])),
                ('transaction_hash', models.CharField(max_length=255, unique=True)),
                ('from_address', models.CharField(max_length=255)),
                ('to_address', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('confirmed', 'Confirmed'), ('swept', 'Swept'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('sweep_type', models.CharField(choices=[('auto', 'Auto Sweep'), ('manual', 'Manual Sweep'), ('none', 'No Sweep')], default='none', max_length=10)),
                ('sweep_tx_hash', models.CharField(blank=True, max_length=255, null=True)),
                ('gas_fee', models.DecimalField(decimal_places=6, default=0.0, max_digits=20)),
                ('block_number', models.BigIntegerField(blank=True, null=True)),
                ('confirmation_count', models.IntegerField(default=0)),
                ('required_confirmations', models.IntegerField(default=12)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_usdt_deposits', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usdt_deposits', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'USDT Deposit Request',
                'verbose_name_plural': 'USDT Deposit Requests',
                'db_table': 'usdt_deposit_request',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='usdt_deposi_user_id_cbfee1_idx'), models.Index(fields=['status', 'created_at'], name='usdt_deposi_status_c69802_idx'), models.Index(fields=['transaction_hash'], name='usdt_deposi_transac_f4a386_idx'), models.Index(fields=['to_address', 'chain_type'], name='usdt_deposi_to_addr_64beba_idx'), models.Index(fields=['chain_type', 'created_at'], name='usdt_deposi_chain_t_38d5e1_idx')],
            },
        ),
        migrations.CreateModel(
            name='SweepLog',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chain_type', models.CharField(choices=[('erc20', 'ERC20 (Ethereum)'), ('bep20', 'BEP20 (Binance Smart Chain)')], default='trc20', max_length=10)),
                ('from_address', models.CharField(max_length=255)),
                ('to_address', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=6, max_digits=20)),
                ('gas_fee', models.DecimalField(decimal_places=6, default=0.0, max_digits=20)),
                ('transaction_hash', models.CharField(blank=True, max_length=255, null=True)),
                ('sweep_type', models.CharField(choices=[('auto', 'Auto Sweep'), ('manual', 'Manual Sweep')], max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True, null=True)),
                ('initiated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='initiated_sweeps', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sweep_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Sweep Log',
                'verbose_name_plural': 'Sweep Logs',
                'db_table': 'sweep_log',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='sweep_log_user_id_3200b9_idx'), models.Index(fields=['sweep_type', 'created_at'], name='sweep_log_sweep_t_ced8cd_idx'), models.Index(fields=['transaction_hash'], name='sweep_log_transac_7c4700_idx'), models.Index(fields=['chain_type', 'created_at'], name='sweep_log_chain_t_0ba547_idx')],
            },
        ),
        migrations.CreateModel(
            name='DepositRequest',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('payment_method', models.CharField(choices=[('bank_transfer', 'Bank Transfer'), ('upi', 'UPI'), ('razorpay', 'Razorpay'), ('crypto', 'Cryptocurrency')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('reference_number', models.CharField(blank=True, max_length=255, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('screenshot', models.ImageField(blank=True, null=True, upload_to='deposits/')),
                ('notes', models.TextField(blank=True, null=True)),
                ('admin_notes', models.TextField(blank=True, null=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('processed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_deposits', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deposit_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Deposit Request',
                'verbose_name_plural': 'Deposit Requests',
                'db_table': 'deposit_request',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'status'], name='deposit_req_user_id_2c325f_idx'), models.Index(fields=['status', 'created_at'], name='deposit_req_status_a7cfcc_idx'), models.Index(fields=['payment_method', 'created_at'], name='deposit_req_payment_3e27d4_idx')],
            },
        ),
    ]
